//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RefundSettelment.YaghutWebRefrence {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Yaghut_MobileAppSoap", Namespace="http://tempuri.org/")]
    public partial class Yaghut_MobileApp : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CardTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback InquiryCardHolderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Yaghut_MobileApp() {
            this.Url = global::RefundSettelment.Properties.Settings.Default.RefundSettelment_YaghutWebRefrence_Yaghut_MobileApp;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CardTransferCompletedEventHandler CardTransferCompleted;
        
        /// <remarks/>
        public event InquiryCardHolderCompletedEventHandler InquiryCardHolderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CardTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CardTransfer(string PAN, string Pin, string CVV, string ExpDate, string DestPAN, decimal Amount) {
            object[] results = this.Invoke("CardTransfer", new object[] {
                        PAN,
                        Pin,
                        CVV,
                        ExpDate,
                        DestPAN,
                        Amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CardTransferAsync(string PAN, string Pin, string CVV, string ExpDate, string DestPAN, decimal Amount) {
            this.CardTransferAsync(PAN, Pin, CVV, ExpDate, DestPAN, Amount, null);
        }
        
        /// <remarks/>
        public void CardTransferAsync(string PAN, string Pin, string CVV, string ExpDate, string DestPAN, decimal Amount, object userState) {
            if ((this.CardTransferOperationCompleted == null)) {
                this.CardTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardTransferOperationCompleted);
            }
            this.InvokeAsync("CardTransfer", new object[] {
                        PAN,
                        Pin,
                        CVV,
                        ExpDate,
                        DestPAN,
                        Amount}, this.CardTransferOperationCompleted, userState);
        }
        
        private void OnCardTransferOperationCompleted(object arg) {
            if ((this.CardTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardTransferCompleted(this, new CardTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InquiryCardHolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InquiryCardHolder(string PAN, string Pin, string CVV, string ExpDate, string DestPAN) {
            object[] results = this.Invoke("InquiryCardHolder", new object[] {
                        PAN,
                        Pin,
                        CVV,
                        ExpDate,
                        DestPAN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InquiryCardHolderAsync(string PAN, string Pin, string CVV, string ExpDate, string DestPAN) {
            this.InquiryCardHolderAsync(PAN, Pin, CVV, ExpDate, DestPAN, null);
        }
        
        /// <remarks/>
        public void InquiryCardHolderAsync(string PAN, string Pin, string CVV, string ExpDate, string DestPAN, object userState) {
            if ((this.InquiryCardHolderOperationCompleted == null)) {
                this.InquiryCardHolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInquiryCardHolderOperationCompleted);
            }
            this.InvokeAsync("InquiryCardHolder", new object[] {
                        PAN,
                        Pin,
                        CVV,
                        ExpDate,
                        DestPAN}, this.InquiryCardHolderOperationCompleted, userState);
        }
        
        private void OnInquiryCardHolderOperationCompleted(object arg) {
            if ((this.InquiryCardHolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InquiryCardHolderCompleted(this, new InquiryCardHolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CardTransferCompletedEventHandler(object sender, CardTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InquiryCardHolderCompletedEventHandler(object sender, InquiryCardHolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InquiryCardHolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InquiryCardHolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591